#--- looking at clustering
library(tidyverse)
library(janitor)
library(cluster)
library(Rtsne)

courses <- read_csv('attempting_clustering.csv')

#----reshape course_content so that one tag per column
course_content <- read_csv('course_node_count_tags.csv')

course_content_test <- read_csv('course_tags_with_IDS.csv')
course_tags <- course_content_test %>% 
  mutate(split_content_tags = str_split(content_tags, ",")) %>% 
  unnest(split_content_tags) %>%
  group_by(course_id) %>%
  mutate(N = paste0('tag', row_number())) %>%
  separate(split_content_tags, c("name","id_number"), sep =  "-") %>%
  pivot_wider(names_from='N', values_from= c("name", "id_number")) %>%
  #spread(N, split_content_tags, fill='') %>%
  #select(-split_content_tags) %>%
  mutate_at(vars(starts_with("name")), list(~na_if(.,""))) %>%
  mutate_at(vars(starts_with('name')), function(x) as.factor(x)) %>%
  mutate_at(vars(starts_with('id')), function(x) as.double(x))


#---- clustering just the courses

gower_dist <- daisy(course_tags %>%
                      select(lesson_count, total_page_count, total_page_item_count, 
                             !!paste0('tag', 1:39, sep="")), 'gower')

gower_mat <- as.matrix(gower_dist)
#' Print most similar courses
course_tags[which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ]


#print most dissimilar courses
View(course_tags[which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]), arr.ind = TRUE)[1, ], ])


sil_width <- c(NA)
for(i in 2:20){  
  pam_fit <- pam(gower_dist, diss = TRUE, k = i)  
  sil_width[i] <- pam_fit$silinfo$avg.width  
}
plot(1:20, sil_width,
     xlab = "Number of clusters",
     ylab = "Silhouette Width")
lines(1:20, sil_width)

k <- 15
pam_fit <- pam(gower_dist, diss = TRUE, k)
pam_results <- course_tags %>%
  ungroup() %>% 
  mutate(cluster = pam_fit$clustering) %>%
  group_by(cluster) %>%
  do(the_summary = summary(.))
pam_results$the_summary



# looking at lower dimensional space
tsne_obj <- Rtsne(gower_dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
  data.frame() %>%
  setNames(c("X", "Y")) %>%
  mutate(cluster = factor(pam_fit$clustering))
ggplot(aes(x = X, y = Y), data = tsne_data) +
  geom_point(aes(color = cluster))


# Course + Inmate Demographic Info ----------------------------------------

#---- joining with inmate information, perform clustering

course_inmates <- courses %>% select(inmate_id, course_id, 
                                     quiz_score,
                                     language, 
                                     spent_time,
                                     total_points, 
                                     total_spent_points,
                                     facility_id, 
                                     created_at,
                                     updated_at_1)

course_tags <- course_tags %>% select(course_id, lesson_count, total_page_count,
                                      total_page_item_count,!!paste0('tag', 1:5, sep=""))
  
inmate_courses <- course_tags %>%
  left_join(course_inmates, by=c("course_id")) %>% 
  select(!!paste0('tag', 1:5, sep=""), inmate_id, course_id, total_points, total_spent_points, language, updated_at_1) %>%
  group_by(inmate_id) %>%
  arrange(desc(updated_at_1)) %>%
  summarise_all(funs(toString(na.omit(.)))) %>%
  #select(!!paste0('tag', 1:5, sep="")) %>%
  as_tibble      %>% # convert to table
  purrr::modify(~replace(.x,lengths(.x)==0,list(NA))) %>% # replace empty elements by list(NA) so they have length 1 too
  modify_if(~all(lengths(.x)==1),unlist) %>%
  separate('tag1', paste("tag1", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
  separate('tag2', paste("tag2", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
  separate('tag3', paste("tag3", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
  separate('tag4', paste("tag4", 'course',1:10, sep="_"), sep=",", extra="drop") %>%
  separate('tag5', paste("tag5", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
  mutate_all(as.factor) 

gower_dist <- daisy(inmate_courses %>%
                      select(-course_id, -inmate_id, -updated_at_1), 'gower')
gower_mat <- as.matrix(gower_dist)
#' Print most similar courses
View(inmate_courses[which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ] %>% select_if(~sum(!is.na(.)) > 0))


#print most dissimilar courses
inmate_courses[which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]), arr.ind = TRUE)[1, ], ]


sil_width <- c(NA)
for(i in 2:20){  
  pam_fit <- pam(gower_dist, diss = TRUE, k = i)  
  sil_width[i] <- pam_fit$silinfo$avg.width  
}
plot(1:20, sil_width,
     xlab = "Number of clusters",
     ylab = "Silhouette Width")
lines(1:20, sil_width)

k <- 15
pam_fit <- pam(gower_dist, diss = TRUE, k)
pam_results <- inmate_courses %>%
  ungroup() %>% 
  mutate(cluster = pam_fit$clustering) %>%
  group_by(cluster) %>%
  do(the_summary = summary(.))
pam_results$the_summary



# looking at lower dimensional space
tsne_obj <- Rtsne(gower_dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
  data.frame() %>%
  setNames(c("X", "Y")) %>%
  mutate(cluster = factor(pam_fit$clustering))
ggplot(aes(x = X, y = Y), data = tsne_data) +
  geom_point(aes(color = cluster))
  


#--- more inspection of this; What do the inmates in cluster have in common?

inmate_demo_info <- read_csv('inmates_edovo.csv')
inmate_demo<- inmate_demo_info %>% 
  mutate(id = as.factor(id), inmate_id =as.factor(inmate_id)) %>%
  mutate(age = lubridate::time_length(Sys.Date() - birth_date, unit='days') / 365.25) %>%
  select(id,first_name,  last_name, age, facility_id, total_points, total_spent_points)


test <- inmate_courses %>%
  ungroup() %>% 
  mutate(cluster = pam_fit$clustering) %>%
  group_by(cluster) %>%
  mutate(inmate_id = as.factor(inmate_id)) %>%
  select(-total_points, -total_spent_points) %>%
  inner_join(inmate_demo, by=c('inmate_id' = 'id' )) %>%
  ungroup()
 


test %>% 
  filter(cluster == 1)%>%
  select(first_name, last_name, age, facility_id, language, 
                                         total_points, total_spent_points)



distinct_tags <- test %>%
  select(starts_with('tag')) %>%
  rowwise() %>%
  do(data.frame(., count_distinct_tags = n_distinct(unlist(.))))

test$count_distinct_tags <- distinct_tags$count_distinct_tags

#avg number of points + age per cluster
test %>% 
  #left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
  group_by(cluster)%>%
  summarise(mean_total_points = mean(total_points, na.rm=T),
            mean_spent_points= mean(total_spent_points, na.rm=T),
            point_diff = mean_total_points - mean_spent_points,
            mean_age = mean(age, na.rm=T),
            mean_distinct_tags = mean(count_distinct_tags, na.rm=T),
            most_common_tag1_course1 = modeest::mlv(tag1_course_1, method=mfv),
            most_common_tag2_course1 = modeest::mlv(tag2_course_1, method=mfv),
            most_common_tag1_course2 = modeest::mlv(tag1_course_2, method=mfv))


for_plot <- test %>% group_by(cluster,facility_id) %>%
  summarise(n= n()) %>%
  mutate(freq = n / sum(n))

ggplot(for_plot, 
       aes(x=as.factor(facility_id), y=n)) + geom_col()+ facet_wrap(~cluster)
  
  

#number of members in each cluster in a certain facility
View(test %>% group_by(cluster) %>% count(facility_id))



# Clustering Based on Time as ACTIVE user ---------------------------------

active_users<- inmate_demo_info %>% 
  mutate(id = as.factor(id), inmate_id =as.factor(inmate_id)) %>%
  mutate(age = lubridate::time_length(Sys.Date() - birth_date, unit='days') / 365.25,
         user_time =lubridate::time_length(Sys.Date() - lubridate::as_date(created_at), unit='days') / 365.25 ) %>%
  select(id,first_name,  last_name, age, facility_id, total_points, total_spent_points, 
         status, user_time) %>%
  filter(status=='ACTIVE')


test <- inmate_courses %>%
  ungroup() %>% 
  mutate(cluster = pam_fit$clustering) %>%
  group_by(cluster) %>%
  mutate(inmate_id = as.factor(inmate_id)) %>%
  select(-total_points, -total_spent_points) %>%
  inner_join(active_users, by=c('inmate_id' = 'id' )) %>%
  ungroup()



distinct_tags <- test %>%
  select(starts_with('tag')) %>%
  rowwise() %>%
  do(data.frame(., count_distinct_tags = n_distinct(unlist(.))))

test$count_distinct_tags <- distinct_tags$count_distinct_tags

#avg number of points + age per cluster
test %>% 
  #left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
  group_by(cluster)%>%
  summarise(mean_total_points = mean(total_points, na.rm=T),
            mean_spent_points= mean(total_spent_points, na.rm=T),
            point_diff = mean_total_points - mean_spent_points,
            mean_age = mean(age, na.rm=T),
            mean_user_time  =mean(user_time, na.rm=T),
            mean_distinct_tags = mean(count_distinct_tags, na.rm=T),
            most_common_tag1_course1 = modeest::mlv(tag1_course_1, method=mfv),
            most_common_tag2_course1 = modeest::mlv(tag2_course_1, method=mfv),
            most_common_tag1_course2 = modeest::mlv(tag1_course_2, method=mfv))



k <- 15
pam_fit <- pam(gower_dist, diss = TRUE, k)
pam_results <- inmate_courses %>%
  ungroup() %>% 
  mutate(cluster = pam_fit$clustering) %>%
  group_by(cluster) %>%
  do(the_summary = summary(.))
pam_results$the_summary



# looking at lower dimensional space
tsne_obj <- Rtsne(gower_dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
  data.frame() %>%
  setNames(c("X", "Y")) %>%
  mutate(cluster = factor(pam_fit$clustering))
ggplot(aes(x = X, y = Y), data = tsne_data) +
  geom_point(aes(color = cluster))






# count number of people in each cluster jail vs. prison?

#--- look at average cluster similarity for clustering
#just the courses vs. inmates engagement withe courses
