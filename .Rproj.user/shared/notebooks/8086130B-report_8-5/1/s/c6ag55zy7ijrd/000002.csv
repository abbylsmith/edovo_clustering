"0","#--- looking across facilities"
"0","facility_ID_orig <- read_csv('facility_IDs.csv')"
"2","Parsed with column specification:
cols(
  .default = col_double(),
  state = [31mcol_character()[39m,
  name = [31mcol_character()[39m,
  url = [31mcol_character()[39m,
  created_at = [34mcol_datetime(format = """")[39m,
  updated_at = [34mcol_datetime(format = """")[39m,
  ip_address_range = [31mcol_character()[39m,
  facility_type = [31mcol_character()[39m,
  public = [33mcol_logical()[39m,
  time_zone = [31mcol_character()[39m,
  use_id_feed = [33mcol_logical()[39m,
  integration_id = [31mcol_character()[39m,
  edovo_disabled = [33mcol_logical()[39m,
  goals_enabled = [33mcol_logical()[39m,
  enable_point_service = [33mcol_logical()[39m,
  calculator_enabled = [33mcol_logical()[39m,
  dictionary_enabled = [33mcol_logical()[39m,
  mental_health_enabled = [33mcol_logical()[39m,
  zendesk_enabled = [33mcol_logical()[39m,
  zendesk_widget_enabled = [33mcol_logical()[39m,
  content_base_url = [31mcol_character()[39m
)
"
"2","See spec(...) for full column specifications.
"
"0","facilities_to_include <- c(""Cleveland County"",""Kane County"", "
"0","                           ""ME DOC Maine Correctional Center"","
"0","                           ""ME DOC Maine State Prison"","
"0","                           ""ME DOC Maine Mountain View"","
"0","                           ""Mendocino County"","
"0","                           ""Moore County"","
"0","                           ""Steuben County"","
"0","                           ""Yakima County"","
"0","                           ""Yolo County"")"
"0",""
"0","facility_ID <- facility_ID_orig %>%"
"0","  filter(str_detect(name, paste(facilities_to_include, collapse = ""|""))) %>%"
"0","  select(id, state,name, goals_enabled)"
"0",""
"0","edovo_user_and_facility <- edovo_user_data %>%"
"0","  inner_join(facility_ID, by=c( 'facility_id' = 'id')) "
"0",""
"0","#--- duplicates per facility"
"0","dup_per_facil <- edovo_user_and_facility %>% "
"0","  group_by(first_name, last_name) %>% "
"0","  mutate(count_num_accounts = n()) %>% "
"0","  group_by(name) %>%"
"0","  mutate(num_per_facility = n()) %>%"
"0","  filter(count_num_accounts > 1) %>%"
"0","  summarise(dup_per_facility = n()/num_per_facility) %>% unique()"
"2","`summarise()` regrouping output by 'name' (override with `.groups` argument)
"
"0","p<-ggplot(data=dup_per_facil, aes(x=name, y=dup_per_facility)) +"
"0","  geom_bar(stat=""identity"") +coord_flip() +"
"0","  ggtitle('Duplication Rate Per Facility')"
"0","p"
