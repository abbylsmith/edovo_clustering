head(Test)
head(test)
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
inner_join(inmate_demo, by=c('inmate_id' = 'id' )) %>%
mutate(age = lubridate::time_length(Sys.Date() - birth_date, unit='days') / 365.25)
head(test)
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
full_join(inmate_demo, by=c('inmate_id' = 'id' )) %>%
mutate(age = lubridate::time_length(Sys.Date() - birth_date, unit='days') / 365.25)
test
head(inmate_courses)
head(inmate_demo)
inmate_demo<- inmate_demo_info %>%
mutate(id = as.factor(id), inmate_id =as.factor(inmate_id)) %>%
mutate(age = lubridate::time_length(Sys.Date() - birth_date, unit='days') / 365.25) %>%
select(first_name, last_name, age)
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
full_join(inmate_demo, by=c('inmate_id' = 'id' ))
inmate_demo<- inmate_demo_info %>%
mutate(id = as.factor(id), inmate_id =as.factor(inmate_id)) %>%
mutate(age = lubridate::time_length(Sys.Date() - birth_date, unit='days') / 365.25) %>%
select(id,first_name, last_name, age)
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
full_join(inmate_demo, by=c('inmate_id' = 'id' ))
test %>%
filter(cluster == 1)%>%
select(first_name, last_name, age, facility_id, language,
total_points, total_spent_points)
inmate_demo<- inmate_demo_info %>%
mutate(id = as.factor(id), inmate_id =as.factor(inmate_id)) %>%
mutate(age = lubridate::time_length(Sys.Date() - birth_date, unit='days') / 365.25) %>%
select(id,first_name, facility_id, last_name, age)
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
full_join(inmate_demo, by=c('inmate_id' = 'id' ))
test
test %>%
filter(cluster == 1)%>%
select(first_name, last_name, age, facility_id, language,
total_points, total_spent_points)
#avg number of points + age per cluster
test %>% group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T))
inmate_demo<- inmate_demo_info %>%
mutate(id = as.factor(id), inmate_id =as.factor(inmate_id)) %>%
mutate(age = lubridate::time_length(Sys.Date() - birth_date, unit='days') / 365.25) %>%
select(id,first_name,  last_name, age, facility_id, total_points, total_spent_points)
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
full_join(inmate_demo, by=c('inmate_id' = 'id' ))
test
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
left_join(inmate_demo, by=c('inmate_id' = 'id' ))
test
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
select(-total_points, -total_spent_points)
test
test %>%
filter(cluster == 1)%>%
select(first_name, last_name, age, facility_id, language,
total_points, total_spent_points)
inner_join(inmate_demo, by=c('inmate_id' = 'id' ))
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
select(-total_points, -total_spent_points) %>%
inner_join(inmate_demo, by=c('inmate_id' = 'id' ))
test
length(unique(test$inmate_id))
test %>%
filter(cluster == 1)%>%
select(first_name, last_name, age, facility_id, language,
total_points, total_spent_points)
#avg number of points + age per cluster
test %>% group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T))
View(test)
test %>%
select(starts_with('tag')) %>%
rowwise() %>%
do(data.frame(., Count = n_distinct(unlist(.))))
test %>%
select(starts_with('tag')) %>%
rowwise() %>%
do(data.frame(., Count = n_distinct(unlist(.)))) %>%
select(Count)
View(test)
ncol(test %>% select(starts_with('tag')))
inmate_courses <- course_tags %>%
left_join(course_inmates, by=c("course_id")) %>%
select(!!paste0('tag', 1:5, sep=""), inmate_id, course_id, total_points, total_spent_points, language) %>%
group_by(inmate_id) %>%
summarise_all(funs(toString(na.omit(.)))) %>%
#select(!!paste0('tag', 1:5, sep="")) %>%
as_tibble      %>% # convert to table
purrr::modify(~replace(.x,lengths(.x)==0,list(NA))) %>% # replace empty elements by list(NA) so they have length 1 too
modify_if(~all(lengths(.x)==1),unlist) %>%
separate('tag1', paste("tag1", 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag2', paste("tag2", 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag3', paste("tag3", 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag4', paste("tag4", 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag5', paste("tag5", 1:10, sep="_"), sep=",", extra="drop") %>%
mutate_all(as.factor)
gower_dist <- daisy(inmate_courses %>%
select(-course_id, -inmate_id), 'gower')
gower_mat <- as.matrix(gower_dist)
#' Print most similar courses
View(inmate_courses[which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ] %>% select_if(~sum(!is.na(.)) > 0))
inmate_demo_info <- read_csv('inmates_edovo.csv')
inmate_demo<- inmate_demo_info %>%
mutate(id = as.factor(id), inmate_id =as.factor(inmate_id)) %>%
mutate(age = lubridate::time_length(Sys.Date() - birth_date, unit='days') / 365.25) %>%
select(id,first_name,  last_name, age, facility_id, total_points, total_spent_points)
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
select(-total_points, -total_spent_points) %>%
inner_join(inmate_demo, by=c('inmate_id' = 'id' ))
test %>%
filter(cluster == 1)%>%
select(first_name, last_name, age, facility_id, language,
total_points, total_spent_points)
#avg number of points + age per cluster
test %>% group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T))
test %>%
select(starts_with('tag')) %>%
rowwise() %>%
do(data.frame(., count_distinct_tags = n_distinct(unlist(.)))) %>%
select(inmate_id,count_distinct_tags)
distinct_tags <- test %>%
select(starts_with('tag')) %>%
rowwise() %>%
do(data.frame(., count_distinct_tags = n_distinct(unlist(.)))) %>%
select(count_distinct_tags)
View(distinct_tags)
ncol(test %>% select(starts_with('tag')))
View(test)
colnames(test %>% select(starts_with('tag')))
paste('tag1', 'course', 1:10, sep="_")
paste('tag1', 'course', 1:10, sep=c("_", ""))
inmate_courses <- course_tags %>%
left_join(course_inmates, by=c("course_id")) %>%
select(!!paste0('tag', 1:5, sep=""), inmate_id, course_id, total_points, total_spent_points, language) %>%
group_by(inmate_id) %>%
summarise_all(funs(toString(na.omit(.)))) %>%
#select(!!paste0('tag', 1:5, sep="")) %>%
as_tibble      %>% # convert to table
purrr::modify(~replace(.x,lengths(.x)==0,list(NA))) %>% # replace empty elements by list(NA) so they have length 1 too
modify_if(~all(lengths(.x)==1),unlist) %>%
separate('tag1', paste("tag1", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag2', paste("tag2", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag3', paste("tag3", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag4', paste("tag4", 'course',1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag5', paste("tag5", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
mutate_all(as.factor)
gower_dist <- daisy(inmate_courses %>%
select(-course_id, -inmate_id), 'gower')
gower_mat <- as.matrix(gower_dist)
#' Print most similar courses
View(inmate_courses[which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ] %>% select_if(~sum(!is.na(.)) > 0))
inmate_courses <- course_tags %>%
left_join(course_inmates, by=c("course_id")) %>%
distinct() %>%
select(!!paste0('tag', 1:5, sep=""), inmate_id, course_id, total_points, total_spent_points, language) %>%
group_by(inmate_id) %>%
summarise_all(funs(toString(na.omit(.)))) %>%
#select(!!paste0('tag', 1:5, sep="")) %>%
as_tibble      %>% # convert to table
purrr::modify(~replace(.x,lengths(.x)==0,list(NA))) %>% # replace empty elements by list(NA) so they have length 1 too
modify_if(~all(lengths(.x)==1),unlist) %>%
separate('tag1', paste("tag1", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag2', paste("tag2", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag3', paste("tag3", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag4', paste("tag4", 'course',1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag5', paste("tag5", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
mutate_all(as.factor)
View(inmate_courses)
gower_dist <- daisy(inmate_courses %>%
select(-course_id, -inmate_id), 'gower')
gower_mat <- as.matrix(gower_dist)
#' Print most similar courses
View(inmate_courses[which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ] %>% select_if(~sum(!is.na(.)) > 0))
inmate_courses <- course_tags %>%
left_join(course_inmates, by=c("course_id")) %>%
distinct(course_id) %>%
select(!!paste0('tag', 1:5, sep=""), inmate_id, course_id, total_points, total_spent_points, language) %>%
group_by(inmate_id) %>%
summarise_all(funs(toString(na.omit(.)))) %>%
#select(!!paste0('tag', 1:5, sep="")) %>%
as_tibble      %>% # convert to table
purrr::modify(~replace(.x,lengths(.x)==0,list(NA))) %>% # replace empty elements by list(NA) so they have length 1 too
modify_if(~all(lengths(.x)==1),unlist) %>%
separate('tag1', paste("tag1", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag2', paste("tag2", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag3', paste("tag3", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag4', paste("tag4", 'course',1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag5', paste("tag5", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
mutate_all(as.factor)
ourse_tags %>%
left_join(course_inmates, by=c("course_id")) %>%
distinct(course_id)
?distinct
course_tags %>%
left_join(course_inmates, by=c("course_id")) %>%
distinct(course_id, .keep_all = T)
inmate_courses <- course_tags %>%
left_join(course_inmates, by=c("course_id")) %>%
distinct(course_id, .keep_all = T) %>%
select(!!paste0('tag', 1:5, sep=""), inmate_id, course_id, total_points, total_spent_points, language) %>%
group_by(inmate_id) %>%
summarise_all(funs(toString(na.omit(.)))) %>%
#select(!!paste0('tag', 1:5, sep="")) %>%
as_tibble      %>% # convert to table
purrr::modify(~replace(.x,lengths(.x)==0,list(NA))) %>% # replace empty elements by list(NA) so they have length 1 too
modify_if(~all(lengths(.x)==1),unlist) %>%
separate('tag1', paste("tag1", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag2', paste("tag2", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag3', paste("tag3", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag4', paste("tag4", 'course',1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag5', paste("tag5", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
mutate_all(as.factor)
View(inmate_courses)
length(unique(course_inmates$inmate_id))
course_tags %>%
left_join(course_inmates, by=c("course_id")) %>%
select(!!paste0('tag', 1:5, sep=""), inmate_id, course_id, total_points, total_spent_points, language) %>%
distinct(course_id, .keep_all = T)
colnames(course_inmates)
inmate_courses <- course_tags %>%
left_join(course_inmates, by=c("course_id")) %>%
select(!!paste0('tag', 1:5, sep=""), inmate_id, course_id, total_points, total_spent_points, language) %>%
distinct(course_id, .keep_all = T) %>%
group_by(inmate_id) %>%
summarise_all(funs(toString(na.omit(.)))) %>%
#select(!!paste0('tag', 1:5, sep="")) %>%
as_tibble      %>% # convert to table
purrr::modify(~replace(.x,lengths(.x)==0,list(NA))) %>% # replace empty elements by list(NA) so they have length 1 too
modify_if(~all(lengths(.x)==1),unlist) %>%
separate('tag1', paste("tag1", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag2', paste("tag2", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag3', paste("tag3", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag4', paste("tag4", 'course',1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag5', paste("tag5", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
mutate_all(as.factor)
inmate_courses <- course_tags %>%
left_join(course_inmates, by=c("course_id")) %>%
select(!!paste0('tag', 1:5, sep=""), inmate_id, course_id, total_points, total_spent_points, language) %>%
group_by(inmate_id) %>%
summarise_all(funs(toString(na.omit(.)))) %>%
#select(!!paste0('tag', 1:5, sep="")) %>%
as_tibble      %>% # convert to table
purrr::modify(~replace(.x,lengths(.x)==0,list(NA))) %>% # replace empty elements by list(NA) so they have length 1 too
modify_if(~all(lengths(.x)==1),unlist) %>%
separate('tag1', paste("tag1", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag2', paste("tag2", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag3', paste("tag3", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag4', paste("tag4", 'course',1:10, sep="_"), sep=",", extra="drop") %>%
separate('tag5', paste("tag5", 'course', 1:10, sep="_"), sep=",", extra="drop") %>%
mutate_all(as.factor)
inmate_demo<- inmate_demo_info %>%
mutate(id = as.factor(id), inmate_id =as.factor(inmate_id)) %>%
mutate(age = lubridate::time_length(Sys.Date() - birth_date, unit='days') / 365.25) %>%
select(id,first_name,  last_name, age, facility_id, total_points, total_spent_points)
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
select(-total_points, -total_spent_points) %>%
inner_join(inmate_demo, by=c('inmate_id' = 'id' ))
test
distinct_tags <- test %>%
select(starts_with('tag')) %>%
rowwise() %>%
do(data.frame(., count_distinct_tags = n_distinct(unlist(.))))
#avg number of points + age per cluster
test %>%
left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T),
mean_distinct_tags = mean(count_distinct_tags, na.rm=T))
?n_distinct
distinct_tags <- test %>%
select(starts_with('tag')) %>%
mutate(count_distinct_tags = n_distinct(unlist(.)))
distinct_tags
test <- inmate_courses %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
mutate(inmate_id = as.factor(inmate_id)) %>%
select(-total_points, -total_spent_points) %>%
inner_join(inmate_demo, by=c('inmate_id' = 'id' )) %>%ungroup()
distinct_tags <- test %>%
select(starts_with('tag')) %>%
mutate(count_distinct_tags = n_distinct(unlist(.)))
head(distinct_tags)
test$count_distinct_tags <- distinct_tags$count_distinct_tags
#avg number of points + age per cluster
test %>%
left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T),
mean_distinct_tags = mean(count_distinct_tags, na.rm=T))
#avg number of points + age per cluster
test %>%
#left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T),
mean_distinct_tags = mean(count_distinct_tags, na.rm=T))
distinct_tags$count_distinct_tags
distinct_tags <- test %>%
select(starts_with('tag')) %>%
rowise() %>%
mutate(count_distinct_tags = n_distinct(unlist(.)))
distinct_tags <- test %>%
select(starts_with('tag')) %>%
rowwise() %>%
mutate(count_distinct_tags = n_distinct(unlist(.)))
head(distinct_tags$count_distinct_tags)
distinct_tags <- test %>%
select(starts_with('tag')) %>%
rowwise() %>%
do(data.frame(., count_distinct_tags = n_distinct(unlist(.))))
test$count_distinct_tags <- distinct_tags$count_distinct_tags
head(distinct_tags$count_distinct_tags)
#avg number of points + age per cluster
test %>%
#left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T),
mean_distinct_tags = mean(count_distinct_tags, na.rm=T))
#avg number of points + age per cluster
test %>%
#left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T),
mean_distinct_tags = mean(count_distinct_tags, na.rm=T),
mode = modeest::mlv(net_paid, method=mfv))
#avg number of points + age per cluster
test %>%
#left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T),
mean_distinct_tags = mean(count_distinct_tags, na.rm=T),
mode = modeest::mlv(tag1_course_1, method=mfv))
install.pacakges('modeest')
install.packages('modeest')
library(modeest)
#avg number of points + age per cluster
test %>%
#left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T),
mean_distinct_tags = mean(count_distinct_tags, na.rm=T),
mode = modeest::mlv(tag1_course_1, method=mfv))
#avg number of points + age per cluster
test %>%
#left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T),
mean_distinct_tags = mean(count_distinct_tags, na.rm=T),
most_common_tag1_course1 = modeest::mlv(tag1_course_1, method=mfv),
most_common_tag1_course1 = modeest::mlv(tag1_course_2, method=mfv))
#avg number of points + age per cluster
test %>%
#left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T),
mean_distinct_tags = mean(count_distinct_tags, na.rm=T),
most_common_tag1_course1 = modeest::mlv(tag1_course_1, method=mfv),
most_common_tag1_course2 = modeest::mlv(tag1_course_2, method=mfv))
?mlkv
?mlv
#avg number of points + age per cluster
test %>%
#left_join(distinct_tags %>% select(inmate_id, count_distinct_tags)) %>%
group_by(cluster)%>%
summarise(mean_total_points = mean(total_points, na.rm=T),
mean_spent_points= mean(total_spent_points, na.rm=T),
point_diff = mean_total_points - mean_spent_points,
mean_age = mean(age, na.rm=T),
mean_distinct_tags = mean(count_distinct_tags, na.rm=T),
most_common_tag1_course1 = modeest::mlv(tag1_course_1, method=mfv),
most_common_tag2_course1 = modeest::mlv(tag2_course_1, method=mfv),
most_common_tag1_course2 = modeest::mlv(tag1_course_2, method=mfv))
courses <- read_csv('attempting_clustering.csv')
#----reshape course_content so that one tag per column
course_content <- read_csv('course_node_count_tags.csv')
course_tags <- course_content %>%
mutate(split_content_tags = str_split(content_tags, ",")) %>%
unnest(split_content_tags) %>%
group_by(course_id) %>%
mutate(N = paste0('tag', row_number())) %>%
spread(N, split_content_tags, fill='') %>%
#select(-split_content_tags) %>%
mutate_at(vars(starts_with("tag")), list(~na_if(.,""))) %>%
mutate_at(vars(starts_with('tag')), function(x) as.factor(x))
#---- clustering just the courses
gower_dist <- daisy(course_tags %>%
select(lesson_count, total_page_count, total_page_item_count,
!!paste0('tag', 1:39, sep="")), 'gower')
gower_mat <- as.matrix(gower_dist)
#' Print most similar courses
course_tags[which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ]
#print most dissimilar courses
course_tags[which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]), arr.ind = TRUE)[1, ], ]
sil_width <- c(NA)
for(i in 2:20){
pam_fit <- pam(gower_dist, diss = TRUE, k = i)
sil_width[i] <- pam_fit$silinfo$avg.width
}
plot(1:20, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(1:20, sil_width)
k <- 15
pam_fit <- pam(gower_dist, diss = TRUE, k)
pam_results <- course_tags %>%
ungroup() %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
pam_results$the_summary
# looking at lower dimensional space
tsne_obj <- Rtsne(gower_dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit$clustering))
ggplot(aes(x = X, y = Y), data = tsne_data) +
geom_point(aes(color = cluster))
#' Print most similar courses
View(inmate_courses[which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ] %>% select_if(~sum(!is.na(.)) > 0))
#' Print most similar courses
course_tags[which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ]
#' Print most similar courses
View(course_tags[which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]), arr.ind = TRUE)[1, ], ])
#print most dissimilar courses
View(course_tags[which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]), arr.ind = TRUE)[1, ], ])
head(inmate_demo_info)
